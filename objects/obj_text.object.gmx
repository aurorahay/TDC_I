<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alpha = 0;
print = "";
time = 0;
count = 0; 
//depth = -100;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Progress talking
   
if (obj_auno.key_talk) {  
    count += 1;    
    if (count &gt; talkcount) {
        //obj_auno.state = states.normal;
        scr_end_dialog_handler(objectId, cutSceneTextId);
        alpha = 0;
        instance_destroy();
        exit;
    }
        
    alpha = 1;
    time = 0;
    spd = spdcount[count];
    text_length = string_length(text[count]);    
    spr_character = spr_characters[count]; 
    spr_character_side = spr_character_sides[count];
   
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Add letters over time

if (time &lt; text_length) {
    time += spd;
    print = string_copy(text[count], 0, time);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Render textbox &amp; text

draw_set_alpha(alpha);
if (alpha &lt; 1) {
    alpha += spd/10;
} else {
    alpha = 1;
}

draw_set_font(font);
draw_set_color(c_dkgray);
draw_rectangle(x, y, x + boxwidth, y + boxheight, 0);
draw_set_color(c_black);
draw_rectangle(x, y, x + boxwidth, y + boxheight, 1);

draw_set_color(c_white);
draw_set_halign(fa_left);
draw_set_valign(fa_top);

draw_text_x = x + (sprite_get_width(0) * 2.5) + padding;
sprite_x = x + (sprite_get_width(0) * 1.5);
draw_text_ext
(
    draw_text_x,
    y + padding,
    print,
    font_size + (font_size / 2),
    maxlength - (sprite_get_width(0) * 1.5)    
);

draw_sprite_x = sprite_x;
draw_sprite_y =  y + sprite_get_height(0) * 2.25;
if (spr_character_side &gt; 0) {
    draw_sprite_x = (view_wview[0] + view_xview[0]) - 50;      
}

draw_set_alpha(1);
draw_sprite(spr_character, 0, draw_sprite_x, draw_sprite_y);

if (count &lt; talkcount) {
    draw_sprite(spr_text_more, 0, (view_wview[0] + view_xview[0]) - 120, y + 124 );
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
